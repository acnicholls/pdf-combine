# This script builds the end user installer for Folder Size Calculator
# and then uses the installed to build the portal binaries
# the portal binaries are them compressed and uploaded to the
# github action as output.
name: build-release-binaries
run-name: Release build for ${{ github.event_name }} triggered by ${{ github.triggering_actor }}
concurrency:
  group: release-binaries
on:
  pull_request:
    target_branches:
      - master
    types: [opened, synchronize, reopened]
  workflow_dispatch:
env:
  BUILD_TYPE: Release
  ENDUSER_INSTALLER_FILE_NAME: FolderSizeCalculator.msi
  WEB_PORTAL_URL: "fsc.acnicholls.com"
  WEB_PORTAL_LOG_LOCATION: "database"
  WEB_PORTAL_LOG_FOLDER: ""
  WEB_PORTAL_INSTALLER_LOCATION: "setupFile/FolderSizeCalculator.msi"
  WEB_PORTAL_PUBLISH_PROFILE: "FolderProfile"
jobs:
  prepare-variables:
    runs-on: self-hosted
    outputs:
      build-type: ${{ steps.get-build-type.outputs.build-type }}
      portal-url: ${{ steps.get-portal-url.outputs.portal-url }}
      installer-filename: ${{ steps.get-installer-filename.outputs.installer-filename }}
      log-location: ${{ steps.get-log-location.outputs.log-location }}
      log-folder: ${{ steps.get-log-folder.outputs.log-folder }}
      installer-location: ${{ steps.get-installer-location.outputs.installer-location }}
      publish-profile: ${{ steps.get-publish-profile.outputs.publish-profile }}
    steps:
      - id: get-build-type
        shell: powershell
        run: echo "build-type=${{ env.BUILD_TYPE }}" >> $env:GITHUB_OUTPUT
      - id: get-portal-url
        shell: powershell
        run: echo "portal-url=${{ env.WEB_PORTAL_URL }}" >> $env:GITHUB_OUTPUT
      - id: get-installer-filename
        shell: powershell
        run: echo "installer-filename=${{ env.ENDUSER_INSTALLER_FILE_NAME }}" >> $env:GITHUB_OUTPUT
      - id: get-installer-location
        shell: powershell
        run: echo "installer-location=${{ env.WEB_PORTAL_INSTALLER_LOCATION }}" >> $env:GITHUB_OUTPUT
      - id: get-log-location
        shell: powershell
        run: echo "log-location=${{ env.WEB_PORTAL_LOG_LOCATION }}" >> $env:GITHUB_OUTPUT
      - id: get-log-folder
        shell: powershell
        run: echo "log-folder=${{ env.WEB_PORTAL_LOG_FOLDER }}" >> $env:GITHUB_OUTPUT
      - id: get-publish-profile
        shell: powershell
        run: echo "publish-profile=${{ env.WEB_PORTAL_PUBLISH_PROFILE }}" >> $env:GITHUB_OUTPUT

  prepare-environment:
    needs: prepare-variables
    uses: ./.github/workflows/job-prepare-environment.yml

  build-user-installer:
    uses: ./.github/workflows/job-build-user-installer.yml
    needs: [prepare-variables, prepare-environment]
    with:
      build-type: ${{ needs.prepare-variables.outputs.build-type }}
      installer-filename: ${{ needs.prepare-variables.outputs.installer-filename }}

  build-portal-binaries:
    uses: ./.github/workflows/job-build-and-deploy-or-upload-portal-binaries.yml
    needs: [prepare-variables, prepare-environment, build-user-installer]
    with:
      setup-location: ${{ needs.prepare-variables.outputs.installer-location }}
      log-location: ${{ needs.prepare-variables.outputs.log-location }}
      log-folder: ${{ needs.prepare-variables.outputs.log-folder }}
      build-type: ${{ needs.prepare-variables.outputs.build-type }}
      web-server: ${{ needs.prepare-variables.outputs.portal-url }}
      publish-profile: ${{ needs.prepare-variables.outputs.publish-profile }}
      smtp-host: "smtp.gmail.com"
      smtp-port: 587
      deploy-portal: false
    secrets:
      connectionstring: ${{ secrets.FSC_WEB_USER_DATASERVER }}
      smtp-password: ${{ secrets.SMTP_PASSWORD }}
      smtp-username: ${{ secrets.SMTP_USERNAME }}
